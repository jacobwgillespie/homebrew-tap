# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Run < Formula
  desc "Run is a tool for running package.json scripts"
  homepage "https://github.com/jacobwgillespie/run"
  version "0.3.0"
  license "MIT"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/jacobwgillespie/run/releases/download/v0.3.0/run_0.3.0_Darwin_arm64.tar.gz"
      sha256 "cbc6880e486e49ade35dc464176906a952d366c3d12f58b07f38196a5ca82ca4"

      def install
        bin.install "bin/run"
        bash_comp = Utils.safe_popen_read("#{bin}/run", "--completion", "bash")
        fish_comp = Utils.safe_popen_read("#{bin}/run", "--completion", "fish")
        zsh_comp = Utils.safe_popen_read("#{bin}/run", "--completion", "zsh")
        (bash_completion/"run").write bash_comp
        (fish_completion/"run.fish").write fish_comp
        (zsh_completion/"_run").write zsh_comp
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/jacobwgillespie/run/releases/download/v0.3.0/run_0.3.0_Darwin_x86_64.tar.gz"
      sha256 "2965ea5d2fee0a5cce425f188f66427b3316c69ffed210187592ea509c66557d"

      def install
        bin.install "bin/run"
        bash_comp = Utils.safe_popen_read("#{bin}/run", "--completion", "bash")
        fish_comp = Utils.safe_popen_read("#{bin}/run", "--completion", "fish")
        zsh_comp = Utils.safe_popen_read("#{bin}/run", "--completion", "zsh")
        (bash_completion/"run").write bash_comp
        (fish_completion/"run.fish").write fish_comp
        (zsh_completion/"_run").write zsh_comp
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/jacobwgillespie/run/releases/download/v0.3.0/run_0.3.0_Linux_x86_64.tar.gz"
      sha256 "008f5568f396999cbd908da9207c30ddef1abf856a6e1b51b391f451da2cfd2c"

      def install
        bin.install "bin/run"
        bash_comp = Utils.safe_popen_read("#{bin}/run", "--completion", "bash")
        fish_comp = Utils.safe_popen_read("#{bin}/run", "--completion", "fish")
        zsh_comp = Utils.safe_popen_read("#{bin}/run", "--completion", "zsh")
        (bash_completion/"run").write bash_comp
        (fish_completion/"run.fish").write fish_comp
        (zsh_completion/"_run").write zsh_comp
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/jacobwgillespie/run/releases/download/v0.3.0/run_0.3.0_Linux_arm64.tar.gz"
      sha256 "025b940e839b9d57b4e24e01dfe237b3e2987f1d2fde67c6f6a97dff59394cab"

      def install
        bin.install "bin/run"
        bash_comp = Utils.safe_popen_read("#{bin}/run", "--completion", "bash")
        fish_comp = Utils.safe_popen_read("#{bin}/run", "--completion", "fish")
        zsh_comp = Utils.safe_popen_read("#{bin}/run", "--completion", "zsh")
        (bash_completion/"run").write bash_comp
        (fish_completion/"run.fish").write fish_comp
        (zsh_completion/"_run").write zsh_comp
      end
    end
  end

  test do
    system "#{bin}/run --help"
  end
end
