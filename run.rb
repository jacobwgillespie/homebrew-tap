# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Run < Formula
  desc "Run is a tool for running package.json scripts"
  homepage "https://github.com/jacobwgillespie/run"
  version "0.1.1"
  license "MIT"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/jacobwgillespie/run/releases/download/v0.1.1/run_0.1.1_Darwin_arm64.tar.gz"
      sha256 "9667dead06bd3b235a1daa316a40b2f87766b54ef0b3b5fd1dba129cb52cf9da"

      def install
        bin.install "bin/run"
        bash_comp = Utils.safe_popen_read("#{bin}/run", "--completion", "bash")
        fish_comp = Utils.safe_popen_read("#{bin}/run", "--completion", "fish")
        zsh_comp = Utils.safe_popen_read("#{bin}/run", "--completion", "zsh")
        (bash_completion/"run").write bash_comp
        (fish_completion/"run.fish").write fish_comp
        (zsh_completion/"_run").write zsh_comp
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/jacobwgillespie/run/releases/download/v0.1.1/run_0.1.1_Darwin_x86_64.tar.gz"
      sha256 "4eedc6528358c6626dae238cf105f71a07d9e86ea7a33ef839e2222dc64bdf89"

      def install
        bin.install "bin/run"
        bash_comp = Utils.safe_popen_read("#{bin}/run", "--completion", "bash")
        fish_comp = Utils.safe_popen_read("#{bin}/run", "--completion", "fish")
        zsh_comp = Utils.safe_popen_read("#{bin}/run", "--completion", "zsh")
        (bash_completion/"run").write bash_comp
        (fish_completion/"run.fish").write fish_comp
        (zsh_completion/"_run").write zsh_comp
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/jacobwgillespie/run/releases/download/v0.1.1/run_0.1.1_Linux_x86_64.tar.gz"
      sha256 "1cfc7602106d22d1cc92fa3160be0d7cc9626c7bc59cb86aa9caec5d71f9aea4"

      def install
        bin.install "bin/run"
        bash_comp = Utils.safe_popen_read("#{bin}/run", "--completion", "bash")
        fish_comp = Utils.safe_popen_read("#{bin}/run", "--completion", "fish")
        zsh_comp = Utils.safe_popen_read("#{bin}/run", "--completion", "zsh")
        (bash_completion/"run").write bash_comp
        (fish_completion/"run.fish").write fish_comp
        (zsh_completion/"_run").write zsh_comp
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/jacobwgillespie/run/releases/download/v0.1.1/run_0.1.1_Linux_arm64.tar.gz"
      sha256 "31fc7793099e42d43b14442fb2dbad74b19109981880fdde428eba97f54d781e"

      def install
        bin.install "bin/run"
        bash_comp = Utils.safe_popen_read("#{bin}/run", "--completion", "bash")
        fish_comp = Utils.safe_popen_read("#{bin}/run", "--completion", "fish")
        zsh_comp = Utils.safe_popen_read("#{bin}/run", "--completion", "zsh")
        (bash_completion/"run").write bash_comp
        (fish_completion/"run.fish").write fish_comp
        (zsh_completion/"_run").write zsh_comp
      end
    end
  end

  test do
    system "#{bin}/run --help"
  end
end
